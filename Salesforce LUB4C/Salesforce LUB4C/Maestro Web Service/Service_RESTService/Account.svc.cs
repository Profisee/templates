//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Maestro SDK Web Services Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mdm.Profisee_Customer360Service.ServiceREST
{
    using Mdm.Profisee_Customer360Service.Contracts.MemberDataContracts;
    using Mdm.Profisee_Customer360Service.ServiceLibrary;
	using Profisee.MasterDataMaestro.Services.DataContracts.MasterDataServices;
    using System.Collections.Generic;
	using System.Configuration;
	using System.Runtime.Serialization;
	using System.ServiceModel;
	using System.ServiceModel.Web;
	using System;
	using System.Collections.ObjectModel;

    public partial class Account : IAccount
    {
	    private string VersionName { get { return ConfigurationManager.AppSettings["VersionName"]; } }

        public AccountMember GetAccountMember(string code)
        {
            LookupBeforeCreate service = new LookupBeforeCreate();
            return service.GetAccountMember(VersionName, code);
        }
		

		public AccountMemberList GetAccountMemberList()
        {
            LookupBeforeCreate service = new LookupBeforeCreate();
            var members = service.GetAccountMembers(VersionName,
                new Profisee.Services.Sdk.Common.Contracts.DataContext.BrowseEntityContext
                {
                    PageNumber = 1,
					PageSize = 50,
                });

            var memberList = new List<AccountMember>(members);
            return new AccountMemberList(memberList);
        }

		public AccountMemberList GetAccountMemberList_Filter(string filter)
        {
            LookupBeforeCreate service = new LookupBeforeCreate();
            var members = service.GetAccountMembers(VersionName,
                new Profisee.Services.Sdk.Common.Contracts.DataContext.BrowseEntityContext
                {
                    PageNumber = 1,
					PageSize = 50,
					Filter = filter
                });

            var memberList = new List<AccountMember>(members);
            return new AccountMemberList(memberList);
        }

		public AccountMemberList GetAccountMemberList_PageNumberPageSize(string pageNumber, string pageSize)
        {
			int _pageNumber = Convert.ToInt32(pageNumber);
            int _pageSize = Convert.ToInt32(pageSize);
            LookupBeforeCreate service = new LookupBeforeCreate();
            var members = service.GetAccountMembers(VersionName,
                new Profisee.Services.Sdk.Common.Contracts.DataContext.BrowseEntityContext
                {
                    PageNumber = _pageNumber,
					PageSize = _pageSize,
                });

            var memberList = new List<AccountMember>(members);
            return new AccountMemberList(memberList);
        }

		public AccountMemberList GetFilteredAccountMemberList(string filter, string pageNumber, string pageSize)
        {
			int _pageNumber = Convert.ToInt32(pageNumber);
			int _pageSize = Convert.ToInt32(pageSize);
            LookupBeforeCreate service = new LookupBeforeCreate();
            var members = service.GetAccountMembers(VersionName,
                new Profisee.Services.Sdk.Common.Contracts.DataContext.BrowseEntityContext
                {
					Filter = filter,
                    PageNumber = _pageNumber,
					PageSize = _pageSize
                });

            var memberList = new List<AccountMember>(members);
            return new AccountMemberList(memberList);
        }

		public MemberIdentifier AddAccountMember(AccountMember member)
        {
            MemberIdentifier memberIdentifier = new MemberIdentifier();

            LookupBeforeCreate service = new LookupBeforeCreate();
            var errors = service.AddAccountMemberWithIdReturn(VersionName, member, out memberIdentifier);

            return memberIdentifier;
        }

		public Collection<MemberIdentifier> AddAccountMembers(Collection<AccountMember> members)
        {
			Collection<MemberIdentifier> memberIdentifiers = new Collection<MemberIdentifier>();

            LookupBeforeCreate service = new LookupBeforeCreate();
            var errors = service.AddAccountMembersWithIdReturn(VersionName, members, out memberIdentifiers);
			return memberIdentifiers;
        }







	}
}