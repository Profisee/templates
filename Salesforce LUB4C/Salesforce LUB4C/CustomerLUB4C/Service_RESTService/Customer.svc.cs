
using Profisee.MasterDataMaestro.Services.DataContracts;
using Profisee.MasterDataMaestro.Services.DataContracts.MasterDataServices;
using System.Collections.Generic;
using System.Configuration;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Web;
using System;
using System.Collections.ObjectModel;
using Mdm.Profisee_Customer360Service.Contracts.EntityServiceContracts;
using Mdm.Profisee_Customer360Service.Contracts.MemberDataContracts;
using Mdm.Profisee_Customer360Service.ServiceLibrary;

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Maestro SDK Web Services Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mdm.Profisee_Customer360Service.ServiceREST
{
  
    [SwaggerWcf.Attributes.SwaggerWcf("Customer")]
    public partial class Customer : ICustomer
    {
        private string VersionName { get { return ConfigurationManager.AppSettings["VersionName"]; } }

        [SwaggerWcf.Attributes.SwaggerWcfTag("Customer Member")]
        public CustomerMember GetCustomerMember(string code)
        {
            //Service service = new Service();
            LookupBeforeCreate service = new LookupBeforeCreate();

            return service.GetCustomerMember(code);
        }
		

        [SwaggerWcf.Attributes.SwaggerWcfTag("Customer Member")]
		public CustomerMemberList GetCustomerMemberList()
        {
            LookupBeforeCreate service = new LookupBeforeCreate();
            var members = service.GetCustomerMembers(
                new Profisee.Services.Sdk.Common.Contracts.DataContext.BrowseEntityContext
                {
                    PageNumber = 1,
					PageSize = 50,
                });

            var memberList = new List<CustomerMember>(members);
            return new CustomerMemberList(memberList);
        }

        [SwaggerWcf.Attributes.SwaggerWcfTag("Customer Member")]
		public CustomerMemberList GetCustomerMemberList_Filter(string filter)
        {
            LookupBeforeCreate service = new LookupBeforeCreate();
            var members = service.GetCustomerMembers(
                new Profisee.Services.Sdk.Common.Contracts.DataContext.BrowseEntityContext
                {
                    PageNumber = 1,
					PageSize = 50,
					Filter = filter
                });

            var memberList = new List<CustomerMember>(members);
            return new CustomerMemberList(memberList);
        }

        [SwaggerWcf.Attributes.SwaggerWcfTag("Customer Member")]
		public CustomerMemberList GetCustomerMemberList_PageNumberPageSize(string pageNumber, string pageSize)
        {
			int _pageNumber = Convert.ToInt32(pageNumber);
            int _pageSize = Convert.ToInt32(pageSize);
            LookupBeforeCreate service = new LookupBeforeCreate();
            var members = service.GetCustomerMembers(
                new Profisee.Services.Sdk.Common.Contracts.DataContext.BrowseEntityContext
                {
                    PageNumber = _pageNumber,
					PageSize = _pageSize,
                });

            var memberList = new List<CustomerMember>(members);
            return new CustomerMemberList(memberList);
        }

        [SwaggerWcf.Attributes.SwaggerWcfTag("Customer Member")]
		public CustomerMemberList GetFilteredCustomerMemberList(string filter, string pageNumber, string pageSize)
        {
			int _pageNumber = Convert.ToInt32(pageNumber);
			int _pageSize = Convert.ToInt32(pageSize);
            LookupBeforeCreate service = new LookupBeforeCreate();
            var members = service.GetCustomerMembers(
                new Profisee.Services.Sdk.Common.Contracts.DataContext.BrowseEntityContext
                {
					Filter = filter,
                    PageNumber = _pageNumber,
					PageSize = _pageSize
                });

            var memberList = new List<CustomerMember>(members);
            return new CustomerMemberList(memberList);
        }

        [SwaggerWcf.Attributes.SwaggerWcfTag("Customer Member")]
		public MemberIdentifier AddCustomerMember(CustomerMember member)
        {
            MemberIdentifier memberIdentifier = new MemberIdentifier();

            LookupBeforeCreate service = new LookupBeforeCreate();
            var errors = service.AddCustomerMemberWithIdReturn(member, out memberIdentifier);

            return memberIdentifier;
        }

        [SwaggerWcf.Attributes.SwaggerWcfTag("Customer Member")]
		public Collection<MemberIdentifier> AddCustomerMembers(Collection<CustomerMember> members)
        {
			Collection<MemberIdentifier> memberIdentifiers = new Collection<MemberIdentifier>();

            LookupBeforeCreate service = new LookupBeforeCreate();
            var errors = service.AddCustomerMembersWithIdReturn(members, out memberIdentifiers);
			return memberIdentifiers;
        }


        [SwaggerWcf.Attributes.SwaggerWcfTag("Customer Member")]
        public Collection<Error> MergeCustomerMember(CustomerMember member)
        {
            LookupBeforeCreate service = new LookupBeforeCreate();
            var errors = service.MergeCustomerMember(member);
			return errors;
		}

        [SwaggerWcf.Attributes.SwaggerWcfTag("Customer Member")]
        public Collection<Error> MergeCustomerMembers(Collection<CustomerMember> members)
        {
            LookupBeforeCreate service = new LookupBeforeCreate();
            var errors = service.MergeCustomerMembers(members);
			return errors;
		}

        [SwaggerWcf.Attributes.SwaggerWcfTag("Customer Member")]
        public Collection<Error> UpdateCustomerMember(CustomerMember member)
        {
            LookupBeforeCreate service = new LookupBeforeCreate();
            var errors = service.UpdateCustomerMember(member);
			return errors;
		}

        [SwaggerWcf.Attributes.SwaggerWcfTag("Customer Member")]
        public Collection<Error> UpdateCustomerMembers(Collection<CustomerMember> members)
        {
            LookupBeforeCreate service = new LookupBeforeCreate();
            var errors = service.UpdateCustomerMembers(members);
			return errors;
		}

        [SwaggerWcf.Attributes.SwaggerWcfTag("Customer Member")]
        public Collection<Error> DeleteCustomerMember(string code)
        {
            LookupBeforeCreate service = new LookupBeforeCreate();
            var errors = service.DeleteCustomerMember(code);
			return errors;
        }

        [SwaggerWcf.Attributes.SwaggerWcfTag("Customer Member")]
        public Collection<Error> DeleteCustomerMembers(Collection<string> codes)
        {
            LookupBeforeCreate service = new LookupBeforeCreate();
            var errors = service.DeleteCustomerMembers(codes);
			return errors;
        }
	}
}